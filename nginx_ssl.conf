user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;

    keepalive_timeout  65;

    types_hash_max_size 2048;

    # Send the nginx version number in error pages and Server header?
    # server_tokens off;

    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    gzip  on;
    gzip_disable "msie6";
    gzip_min_length 1280;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 5;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;

    gzip_types application/atom+xml
               application/javascript
               application/json
               application/rss+xml
               application/vnd.ms-fontobject
               application/x-font-ttf
               application/x-javascript
               application/x-web-app-manifest+json
               application/xhtml+xml
               application/xml
               application/xml+rss
               font/opentype
               image/svg+xml
               image/x-icon
               text/css
               text/javascript
               text/plain
               text/x-component
               text/xml
               ;


    index  index.html index.htm;

    error_page  404              /404.html;
    error_page  500 502 503 504  /50x.html;
    # location = /50x.html {
    #     root   /usr/share/nginx/html;
    # }

    ## set max upload size
    client_max_body_size 2M;
    # fastcgi_buffers 64 4K;

    root /var/www/$host;
    access_log  /var/log/nginx/access.log  main;


    server {
        listen [::]:80 default_server ipv6only=off;
        return 301 https://$host$request_uri;
    } # server:80



    server {
        listen [::]:443 ssl http2 default_server ipv6only=off;

        ssl on;
        ssl_certificate /ssl.cert;
        ssl_certificate_key /ssl.key;
        ssl_dhparam /param.pem;
        ssl_ecdh_curve secp384r1;

        ssl_session_timeout 5m;

        ## https://github.com/BetterCrypto/Applied-Crypto-Hardening/blob/master/src/configuration/Webservers/nginx/default-hsts
        ssl_prefer_server_ciphers on;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # not possible to do exclusive
        ssl_ciphers 'EDH+CAMELLIA:EDH+aRSA:EECDH+aRSA+AESGCM:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH:+CAMELLIA256:+AES256:+CAMELLIA128:+AES128:+SSLv3:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!DSS:!RC4:!SEED:!ECDSA:CAMELLIA256-SHA:AES256-SHA:CAMELLIA128-SHA:AES128-SHA';
        # add_header Strict-Transport-Security max-age=15768000; # six months
        # use this only if all subdomains support HTTPS!
        add_header Strict-Transport-Security "max-age=15768000; includeSubDomains";


        location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
        }

        # location / {
        #     try_files $uri $uri/ index.html;
        # }

        ## Optional: set long EXPIRES header on static assets
        location ~* \.(?:jpg|jpeg|gif|bmp|ico|png|css|js|swf)$ {
            expires 30d;
            ## Optional: Don't log access to assets
            # access_log off;
        }

        location ~* ^\.git {
            deny all;
        }

        add_header "X-UA-Compatible" "IE=Edge,chrome=1";

    } # server:443

} # http
